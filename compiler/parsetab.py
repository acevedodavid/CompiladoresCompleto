
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DIV DO ELSE EQUAL FLOAT FOR GREATERTHAN ID IF INT LBRACKET LESSTHAN LPAREN LSQUARE MAIN MINUS MODULE MULT OR PLUS PROGRAM QUOTATION RBRACKET READ RETURN RPAREN RSQUARE SEMICOLON THEN TO VAR VOID WHILE WRITEprogram : PROGRAM ID SEMICOLON vars aux_funcion pn_go_main main pn_program_end\n              | PROGRAM ID SEMICOLON vars pn_go_main main pn_program_end\n              | PROGRAM ID SEMICOLON aux_funcion pn_go_main main pn_program_end\n              | PROGRAM ID SEMICOLON pn_go_main main pn_program_endmain : MAIN pn_current_function LPAREN RPAREN vars bloque\n            | MAIN pn_current_function LPAREN RPAREN bloqueaux_funcion : funcion\n                   | funcion aux_funcionfuncion : tipo_retorno MODULE ID pn_add_function LPAREN parametros pn_param_count RPAREN vars pn_func_var_count bloque pn_end_function\n               | tipo_retorno MODULE ID pn_add_function LPAREN parametros pn_param_count RPAREN bloque pn_end_function\n               | tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars pn_func_var_count bloque pn_end_function\n               | tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque pn_end_functionvars : VAR varvar : tipo COLON lista_ids SEMICOLON\n           | tipo COLON lista_ids SEMICOLON vartipo_retorno : tipo\n                    | VOID pn_current_typetipo : INT pn_current_type\n          | FLOAT pn_current_type\n          | CHAR pn_current_typeparametros : tipo ID pn_add_parameter\n                  | tipo ID pn_add_parameter COMMA parametroslista_ids : aux_lista_recaux_lista_rec : aux_lista\n                    | aux_lista COMMA aux_lista_recaux_lista : ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE\n                 | ID pn_add_symbol LSQUARE CTE_INT RSQUARE\n                 | ID pn_add_symbolescritura : WRITE LPAREN aux_escritura RPAREN SEMICOLONaux_escritura : pn_push_write_operator letrero pn_write\n                     | pn_push_write_operator expresion pn_write\n                     | pn_push_write_operator letrero pn_write COMMA aux_escritura\n                     | pn_push_write_operator expresion pn_write COMMA aux_escrituracondicional : WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3bloque : LBRACKET estatutos RBRACKET\n              | LBRACKET RBRACKETestatutos : estatuto estatutos\n                  | estatutoestatuto : asignacion\n                | condicional\n                | escritura\n                | retorno\n                | lectura\n                | decision\n                | no_condicional\n                | llamada SEMICOLONasignacion : ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLONretorno : RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLONlectura : READ LPAREN aux_lectura RPAREN SEMICOLONaux_lectura : pn_push_read_operator ID pn_push_operand_and_type pn_read\n                   | pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones\n                   | pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura\n                   | pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lecturaletrero : QUOTATION aux_letrero QUOTATION\n               | QUOTATION QUOTATIONaux_letrero : CTE_CHAR\n                   | CTE_CHAR aux_letrerodecision : IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2\n                | IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2llamada : ID pn_verify_func LPAREN pn_func_era aux_llamada pn_arg_count RPAREN pn_func_gosubaux_llamada : expresion pn_verify_argument\n                   | expresion pn_verify_argument COMMA aux_llamadano_condicional : FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back\n                      | FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_backdimensiones : LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE\n                   | LSQUARE expresion COMMA expresion RSQUARE\n                   | LSQUARE expresion RSQUAREexpresion : comparacion aux_expresion\n                 | aux_comparacionaux_expresion : AND pn_push_operator comparacion pn_and\n                     | OR pn_push_operator comparacion pn_or\n                     | AND pn_push_operator comparacion pn_and aux_expresion\n                     | OR pn_push_operator comparacion pn_or aux_expresioncomparacion : exp LESSTHAN pn_push_operator exp pn_comparison\n                   | exp GREATERTHAN pn_push_operator exp pn_comparison\n                   | exp EQUAL pn_push_operator exp pn_comparisonaux_comparacion : exp LESSTHAN pn_push_operator exp pn_comparison\n                       | exp GREATERTHAN pn_push_operator exp pn_comparison\n                       | exp EQUAL pn_push_operator exp pn_comparison\n                       | expexp : termino pn_addition_substraction\n           | termino pn_addition_substraction PLUS pn_push_operator exp\n           | termino pn_addition_substraction MINUS pn_push_operator exptermino : factor pn_multiplication_division\n             | factor pn_multiplication_division MULT pn_push_operator termino\n             | factor pn_multiplication_division DIV pn_push_operator terminofactor : LPAREN expresion RPAREN\n              |  PLUS var_cte\n              |  PLUS llamada\n              |  MINUS var_cte\n              |  MINUS llamada\n              |  var_cte\n              |  llamadavar_cte : ID pn_push_operand_and_type\n               | CTE_INT pn_push_constant_and_type\n               | CTE_FLOAT pn_push_constant_and_type\n               | CTE_CHAR pn_push_constant_and_typepn_current_function : pn_current_type : pn_go_main : pn_program_end : pn_add_symbol : pn_push_constant_and_type : pn_push_operand_and_type : pn_push_operator : pn_addition_substraction : pn_multiplication_division : pn_assign : pn_push_read_operator : pn_read : pn_push_write_operator : pn_write : pn_and :pn_or : pn_comparison : pn_if_1 : pn_if_2 : pn_else : pn_while_1 : pn_while_2 : pn_while_3 : pn_for_push_comparison : pn_for_go_false : pn_for_go_back : pn_add_function : pn_add_parameter : pn_param_count : pn_arg_count : pn_func_var_count : pn_end_function :pn_verify_func : pn_func_era : pn_verify_argument : pn_func_gosub : pn_retorno :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,19,30,31,32,36,37,38,45,52,60,62,84,],[0,-101,-101,-101,-4,-101,-2,-3,-1,-6,-5,-36,-35,]),'ID':([2,13,14,15,24,26,27,28,34,48,53,59,62,63,64,65,66,67,68,69,70,78,84,86,90,92,93,100,101,102,104,105,107,108,114,115,129,130,142,143,144,145,146,158,159,169,176,180,181,182,183,184,185,186,187,188,189,190,198,199,211,212,213,214,215,218,220,222,226,228,229,231,232,233,244,248,249,251,254,255,256,259,262,268,271,277,285,286,287,288,],[3,-99,-99,-99,35,-18,-19,-20,43,43,72,83,-36,72,-39,-40,-41,-42,-43,-44,-45,94,-35,-46,-111,-109,119,-105,-132,119,119,119,138,119,119,119,119,119,-105,-105,-105,-105,-105,-105,119,-29,-49,119,119,119,119,119,-105,-105,-105,-105,-105,119,-111,-111,119,119,119,119,119,119,-47,119,-48,-109,-117,-105,-105,-105,119,-121,-109,-58,119,119,119,119,-34,119,-117,-59,-124,-124,-64,-63,]),'SEMICOLON':([3,40,41,42,43,49,55,71,95,111,112,113,116,117,118,119,120,121,122,132,137,141,147,148,149,150,151,152,153,154,155,156,165,178,192,194,202,205,207,208,209,210,221,230,234,235,236,237,238,239,240,241,246,253,257,265,266,267,272,273,274,],[4,47,-23,-24,-102,-28,-25,86,-27,-69,-80,-106,-107,-92,-93,-104,-103,-103,-103,169,176,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,-108,-87,-26,220,226,-113,-114,-115,-115,-115,-134,-70,-71,-77,-78,-79,-82,-83,-85,-86,-60,-72,-73,-115,-115,-115,-74,-75,-76,]),'VAR':([4,46,58,96,],[8,8,8,8,]),'MAIN':([4,5,6,7,9,16,17,18,21,23,29,47,54,62,82,84,98,126,127,162,163,193,219,],[-100,-100,-100,20,-7,-100,20,20,-13,-8,20,-14,-15,-36,-130,-35,-12,-130,-130,-10,-11,-130,-9,]),'VOID':([4,5,9,21,47,54,62,82,84,98,126,127,162,163,193,219,],[12,12,12,-13,-14,-15,-36,-130,-35,-12,-130,-130,-10,-11,-130,-9,]),'INT':([4,5,8,9,21,47,50,54,62,82,84,98,126,127,128,162,163,193,219,],[13,13,13,13,-13,13,13,-15,-36,-130,-35,-12,-130,-130,13,-10,-11,-130,-9,]),'FLOAT':([4,5,8,9,21,47,50,54,62,82,84,98,126,127,128,162,163,193,219,],[14,14,14,14,-13,14,14,-15,-36,-130,-35,-12,-130,-130,14,-10,-11,-130,-9,]),'CHAR':([4,5,8,9,21,47,50,54,62,82,84,98,126,127,128,162,163,193,219,],[15,15,15,15,-13,15,15,-15,-36,-130,-35,-12,-130,-130,15,-10,-11,-130,-9,]),'MODULE':([10,11,12,13,14,15,25,26,27,28,],[24,-16,-99,-99,-99,-99,-17,-18,-19,-20,]),'COLON':([13,14,15,22,26,27,28,],[-99,-99,-99,34,-18,-19,-20,]),'LPAREN':([20,33,35,44,72,73,74,75,76,77,88,89,90,91,93,100,101,102,104,105,108,119,129,130,142,143,144,145,146,158,159,180,181,182,183,184,185,186,187,188,189,190,198,199,211,212,213,214,215,218,222,231,232,233,244,254,255,256,259,268,],[-98,39,-125,50,-131,-119,90,-105,92,93,101,102,-111,105,108,-105,-132,108,108,108,108,-131,108,108,-105,-105,-105,-105,-105,-105,108,108,108,108,108,108,-105,-105,-105,-105,-105,108,-111,-111,108,108,108,108,108,108,108,-105,-105,-105,108,108,108,108,108,108,]),'LBRACKET':([21,46,47,51,54,58,81,96,97,125,161,204,223,252,264,283,284,],[-13,53,-14,53,-15,53,-129,53,53,-129,53,53,53,-118,53,53,53,]),'RPAREN':([39,50,57,80,83,99,103,106,109,111,112,113,116,117,118,119,120,121,122,131,133,134,136,138,139,140,141,147,148,149,150,151,152,153,154,155,156,164,166,167,168,170,171,172,175,177,178,195,196,200,203,205,207,208,209,210,217,221,224,225,227,230,234,235,236,237,238,239,240,241,246,247,250,253,257,261,263,265,266,267,270,272,273,274,],[46,58,-127,96,-126,-21,132,137,-116,-69,-80,-106,-107,-92,-93,-104,-103,-103,-103,-120,-112,-112,-135,-104,178,179,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,-22,-128,-133,197,-30,-31,-55,202,-110,-87,221,-61,-54,-50,-113,-114,-115,-115,-115,-67,-134,-32,-33,-51,-70,-71,-77,-78,-79,-82,-83,-85,-86,-60,-62,-52,-72,-73,-66,-53,-115,-115,-115,-65,-74,-75,-76,]),'COMMA':([42,43,49,83,95,99,111,112,113,116,117,118,119,120,121,122,133,134,138,141,147,148,149,150,151,152,153,154,155,156,167,170,171,172,177,178,191,192,196,200,203,205,207,208,209,210,217,221,227,230,234,235,236,237,238,239,240,241,246,253,257,261,265,266,267,270,272,273,274,],[48,-102,-28,-126,-27,128,-69,-80,-106,-107,-92,-93,-104,-103,-103,-103,-112,-112,-104,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,-133,198,199,-55,-110,-87,218,-26,222,-54,228,-113,-114,-115,-115,-115,-67,-134,249,-70,-71,-77,-78,-79,-82,-83,-85,-86,-60,-72,-73,-66,-115,-115,-115,-65,-74,-75,-76,]),'LSQUARE':([43,49,94,95,123,138,177,203,217,],[-102,56,-104,124,159,-104,-110,159,244,]),'RBRACKET':([53,61,62,63,64,65,66,67,68,69,70,84,85,86,169,176,220,226,229,248,251,262,271,277,285,286,287,288,],[62,84,-36,-38,-39,-40,-41,-42,-43,-44,-45,-35,-37,-46,-29,-49,-47,-48,-117,-121,-58,-34,-117,-59,-124,-124,-64,-63,]),'WHILE':([53,62,63,64,65,66,67,68,69,70,84,86,169,176,220,226,229,248,251,262,271,277,285,286,287,288,],[73,-36,73,-39,-40,-41,-42,-43,-44,-45,-35,-46,-29,-49,-47,-48,-117,-121,-58,-34,-117,-59,-124,-124,-64,-63,]),'WRITE':([53,62,63,64,65,66,67,68,69,70,84,86,169,176,220,226,229,248,251,262,271,277,285,286,287,288,],[74,-36,74,-39,-40,-41,-42,-43,-44,-45,-35,-46,-29,-49,-47,-48,-117,-121,-58,-34,-117,-59,-124,-124,-64,-63,]),'RETURN':([53,62,63,64,65,66,67,68,69,70,84,86,169,176,220,226,229,248,251,262,271,277,285,286,287,288,],[75,-36,75,-39,-40,-41,-42,-43,-44,-45,-35,-46,-29,-49,-47,-48,-117,-121,-58,-34,-117,-59,-124,-124,-64,-63,]),'READ':([53,62,63,64,65,66,67,68,69,70,84,86,169,176,220,226,229,248,251,262,271,277,285,286,287,288,],[76,-36,76,-39,-40,-41,-42,-43,-44,-45,-35,-46,-29,-49,-47,-48,-117,-121,-58,-34,-117,-59,-124,-124,-64,-63,]),'IF':([53,62,63,64,65,66,67,68,69,70,84,86,169,176,220,226,229,248,251,262,271,277,285,286,287,288,],[77,-36,77,-39,-40,-41,-42,-43,-44,-45,-35,-46,-29,-49,-47,-48,-117,-121,-58,-34,-117,-59,-124,-124,-64,-63,]),'FOR':([53,62,63,64,65,66,67,68,69,70,84,86,169,176,220,226,229,248,251,262,271,277,285,286,287,288,],[78,-36,78,-39,-40,-41,-42,-43,-44,-45,-35,-46,-29,-49,-47,-48,-117,-121,-58,-34,-117,-59,-124,-124,-64,-63,]),'CTE_INT':([56,90,93,100,101,102,104,105,108,114,115,124,129,130,142,143,144,145,146,158,159,180,181,182,183,184,185,186,187,188,189,190,198,199,211,212,213,214,215,218,222,231,232,233,244,254,255,256,259,268,],[79,-111,120,-105,-132,120,120,120,120,120,120,160,120,120,-105,-105,-105,-105,-105,-105,120,120,120,120,120,120,-105,-105,-105,-105,-105,120,-111,-111,120,120,120,120,120,120,120,-105,-105,-105,120,120,120,120,120,120,]),'ELSE':([62,84,229,],[-36,-35,252,]),'ASSIGN':([72,87,94,123,157,217,261,270,],[-104,100,-104,158,189,-67,-66,-65,]),'RSQUARE':([79,111,112,113,116,117,118,119,120,121,122,141,147,148,149,150,151,152,153,154,155,156,160,178,191,205,207,208,209,210,221,230,234,235,236,237,238,239,240,241,245,246,253,257,260,265,266,267,272,273,274,],[95,-69,-80,-106,-107,-92,-93,-104,-103,-103,-103,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,192,-87,217,-113,-114,-115,-115,-115,-134,-70,-71,-77,-78,-79,-82,-83,-85,-86,261,-60,-72,-73,270,-115,-115,-115,-74,-75,-76,]),'QUOTATION':([90,104,135,173,174,198,199,201,],[-111,135,172,200,-56,-111,-111,-57,]),'PLUS':([90,93,100,101,102,104,105,108,113,116,117,118,119,120,121,122,129,130,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,178,180,181,182,183,184,185,186,187,188,189,190,198,199,211,212,213,214,215,218,221,222,231,232,233,240,241,244,246,254,255,256,259,268,],[-111,114,-105,-132,114,114,114,114,-106,-107,-92,-93,-104,-103,-103,-103,114,114,-105,-105,-105,-105,-105,185,-88,-89,-90,-91,-84,-94,-95,-96,-97,-105,114,-87,114,114,114,114,114,-105,-105,-105,-105,-105,114,-111,-111,114,114,114,114,114,114,-134,114,-105,-105,-105,-85,-86,114,-60,114,114,114,114,114,]),'MINUS':([90,93,100,101,102,104,105,108,113,116,117,118,119,120,121,122,129,130,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,178,180,181,182,183,184,185,186,187,188,189,190,198,199,211,212,213,214,215,218,221,222,231,232,233,240,241,244,246,254,255,256,259,268,],[-111,115,-105,-132,115,115,115,115,-106,-107,-92,-93,-104,-103,-103,-103,115,115,-105,-105,-105,-105,-105,186,-88,-89,-90,-91,-84,-94,-95,-96,-97,-105,115,-87,115,115,115,115,115,-105,-105,-105,-105,-105,115,-111,-111,115,115,115,115,115,115,-134,115,-105,-105,-105,-85,-86,115,-60,115,115,115,115,115,]),'CTE_FLOAT':([90,93,100,101,102,104,105,108,114,115,129,130,142,143,144,145,146,158,159,180,181,182,183,184,185,186,187,188,189,190,198,199,211,212,213,214,215,218,222,231,232,233,244,254,255,256,259,268,],[-111,121,-105,-132,121,121,121,121,121,121,121,121,-105,-105,-105,-105,-105,-105,121,121,121,121,121,121,-105,-105,-105,-105,-105,121,-111,-111,121,121,121,121,121,121,121,-105,-105,-105,121,121,121,121,121,121,]),'CTE_CHAR':([90,93,100,101,102,104,105,108,114,115,129,130,135,142,143,144,145,146,158,159,174,180,181,182,183,184,185,186,187,188,189,190,198,199,211,212,213,214,215,218,222,231,232,233,244,254,255,256,259,268,],[-111,122,-105,-132,122,122,122,122,122,122,122,122,174,-105,-105,-105,-105,-105,-105,122,174,122,122,122,122,122,-105,-105,-105,-105,-105,122,-111,-111,122,122,122,122,122,122,122,-105,-105,-105,122,122,122,122,122,122,]),'AND':([110,113,116,117,118,119,120,121,122,147,148,149,150,151,152,153,154,155,156,178,205,207,208,209,210,221,230,234,235,236,237,238,239,240,241,246,265,266,267,272,273,274,],[142,-106,-107,-92,-93,-104,-103,-103,-103,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,-87,-113,-114,-115,-115,-115,-134,142,142,-74,-75,-76,-82,-83,-85,-86,-60,-115,-115,-115,-74,-75,-76,]),'OR':([110,113,116,117,118,119,120,121,122,147,148,149,150,151,152,153,154,155,156,178,205,207,208,209,210,221,230,234,235,236,237,238,239,240,241,246,265,266,267,272,273,274,],[143,-106,-107,-92,-93,-104,-103,-103,-103,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,-87,-113,-114,-115,-115,-115,-134,143,143,-74,-75,-76,-82,-83,-85,-86,-60,-115,-115,-115,-74,-75,-76,]),'TO':([111,112,113,116,117,118,119,120,121,122,141,147,148,149,150,151,152,153,154,155,156,178,205,207,208,209,210,216,221,230,234,235,236,237,238,239,240,241,242,243,246,253,257,258,265,266,267,272,273,274,],[-69,-80,-106,-107,-92,-93,-104,-103,-103,-103,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,-87,-113,-114,-115,-115,-115,-108,-134,-70,-71,-77,-78,-79,-82,-83,-85,-86,-108,259,-60,-72,-73,268,-115,-115,-115,-74,-75,-76,]),'DO':([111,112,113,116,117,118,119,120,121,122,141,147,148,149,150,151,152,153,154,155,156,178,197,205,207,208,209,210,221,230,234,235,236,237,238,239,240,241,246,253,257,265,266,267,269,272,273,274,275,276,278,279,280,281,282,],[-69,-80,-106,-107,-92,-93,-104,-103,-103,-103,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,-87,223,-113,-114,-115,-115,-115,-134,-70,-71,-77,-78,-79,-82,-83,-85,-86,-60,-72,-73,-115,-115,-115,-122,-74,-75,-76,-122,-115,-115,-123,-123,283,284,]),'LESSTHAN':([112,113,116,117,118,119,120,121,122,147,148,149,150,151,152,153,154,155,156,178,206,221,238,239,240,241,246,],[144,-106,-107,-92,-93,-104,-103,-103,-103,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,-87,231,-134,-82,-83,-85,-86,-60,]),'GREATERTHAN':([112,113,116,117,118,119,120,121,122,147,148,149,150,151,152,153,154,155,156,178,206,221,238,239,240,241,246,],[145,-106,-107,-92,-93,-104,-103,-103,-103,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,-87,232,-134,-82,-83,-85,-86,-60,]),'EQUAL':([112,113,116,117,118,119,120,121,122,147,148,149,150,151,152,153,154,155,156,178,206,221,238,239,240,241,246,],[146,-106,-107,-92,-93,-104,-103,-103,-103,-81,-88,-89,-90,-91,-84,-94,-95,-96,-97,-87,233,-134,-82,-83,-85,-86,-60,]),'MULT':([116,117,118,119,120,121,122,148,149,150,151,152,153,154,155,156,178,221,246,],[-107,-92,-93,-104,-103,-103,-103,-88,-89,-90,-91,187,-94,-95,-96,-97,-87,-134,-60,]),'DIV':([116,117,118,119,120,121,122,148,149,150,151,152,153,154,155,156,178,221,246,],[-107,-92,-93,-104,-103,-103,-103,-88,-89,-90,-91,188,-94,-95,-96,-97,-87,-134,-60,]),'THEN':([179,],[204,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,46,58,96,],[5,51,81,125,]),'aux_funcion':([4,5,9,],[6,16,23,]),'pn_go_main':([4,5,6,16,],[7,17,18,29,]),'funcion':([4,5,9,],[9,9,9,]),'tipo_retorno':([4,5,9,],[10,10,10,]),'tipo':([4,5,8,9,47,50,128,],[11,11,22,11,22,59,59,]),'main':([7,17,18,29,],[19,30,31,36,]),'var':([8,47,],[21,54,]),'pn_current_type':([12,13,14,15,],[25,26,27,28,]),'pn_program_end':([19,30,31,36,],[32,37,38,45,]),'pn_current_function':([20,],[33,]),'lista_ids':([34,],[40,]),'aux_lista_rec':([34,48,],[41,55,]),'aux_lista':([34,48,],[42,42,]),'pn_add_function':([35,],[44,]),'pn_add_symbol':([43,],[49,]),'bloque':([46,51,58,96,97,161,204,223,264,283,284,],[52,60,82,126,127,193,229,248,271,285,286,]),'parametros':([50,128,],[57,164,]),'estatutos':([53,63,],[61,85,]),'estatuto':([53,63,],[63,63,]),'asignacion':([53,63,],[64,64,]),'condicional':([53,63,],[65,65,]),'escritura':([53,63,],[66,66,]),'retorno':([53,63,],[67,67,]),'lectura':([53,63,],[68,68,]),'decision':([53,63,],[69,69,]),'no_condicional':([53,63,],[70,70,]),'llamada':([53,63,93,102,104,105,108,114,115,129,130,159,180,181,182,183,184,190,211,212,213,214,215,218,222,244,254,255,256,259,268,],[71,71,118,118,118,118,118,149,151,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'pn_param_count':([57,],[80,]),'pn_push_operand_and_type':([72,94,119,138,],[87,123,153,177,]),'pn_verify_func':([72,119,],[88,88,]),'pn_while_1':([73,],[89,]),'pn_push_operator':([75,100,142,143,144,145,146,158,185,186,187,188,189,231,232,233,],[91,129,180,181,182,183,184,190,211,212,213,214,215,254,255,256,]),'pn_func_var_count':([81,125,],[97,161,]),'pn_end_function':([82,126,127,193,],[98,162,163,219,]),'pn_add_parameter':([83,],[99,]),'aux_escritura':([90,198,199,],[103,224,225,]),'pn_push_write_operator':([90,198,199,],[104,104,104,]),'aux_lectura':([92,228,249,],[106,250,263,]),'pn_push_read_operator':([92,228,249,],[107,107,107,]),'expresion':([93,102,104,105,108,129,130,159,190,215,218,222,244,259,268,],[109,131,134,136,139,165,167,191,216,242,245,167,260,269,275,]),'comparacion':([93,102,104,105,108,129,130,159,180,181,190,215,218,222,244,259,268,],[110,110,110,110,110,110,110,110,205,207,110,110,110,110,110,110,110,]),'aux_comparacion':([93,102,104,105,108,129,130,159,190,215,218,222,244,259,268,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'exp':([93,102,104,105,108,129,130,159,180,181,182,183,184,190,211,212,215,218,222,244,254,255,256,259,268,],[112,112,112,112,112,112,112,112,206,206,208,209,210,112,238,239,112,112,112,112,265,266,267,112,112,]),'termino':([93,102,104,105,108,129,130,159,180,181,182,183,184,190,211,212,213,214,215,218,222,244,254,255,256,259,268,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,240,241,113,113,113,113,113,113,113,113,113,]),'factor':([93,102,104,105,108,129,130,159,180,181,182,183,184,190,211,212,213,214,215,218,222,244,254,255,256,259,268,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'var_cte':([93,102,104,105,108,114,115,129,130,159,180,181,182,183,184,190,211,212,213,214,215,218,222,244,254,255,256,259,268,],[117,117,117,117,117,148,150,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'pn_func_era':([101,],[130,]),'letrero':([104,],[133,]),'pn_if_1':([109,],[140,]),'aux_expresion':([110,230,234,],[141,253,257,]),'pn_addition_substraction':([113,],[147,]),'pn_multiplication_division':([116,],[152,]),'pn_push_constant_and_type':([120,121,122,],[154,155,156,]),'dimensiones':([123,203,],[157,227,]),'aux_llamada':([130,222,],[166,247,]),'pn_while_2':([131,],[168,]),'pn_write':([133,134,],[170,171,]),'aux_letrero':([135,174,],[173,201,]),'pn_retorno':([136,],[175,]),'pn_assign':([165,216,242,],[194,243,258,]),'pn_arg_count':([166,],[195,]),'pn_verify_argument':([167,],[196,]),'pn_read':([177,],[203,]),'pn_and':([205,],[230,]),'pn_or':([207,],[234,]),'pn_comparison':([208,209,210,265,266,267,276,278,],[235,236,237,272,273,274,279,280,]),'pn_func_gosub':([221,],[246,]),'pn_if_2':([229,271,],[251,277,]),'pn_while_3':([248,],[262,]),'pn_else':([252,],[264,]),'pn_for_push_comparison':([269,275,],[276,278,]),'pn_for_go_false':([279,280,],[281,282,]),'pn_for_go_back':([285,286,],[287,288,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON vars aux_funcion pn_go_main main pn_program_end','program',8,'p_program','main.py',232),
  ('program -> PROGRAM ID SEMICOLON vars pn_go_main main pn_program_end','program',7,'p_program','main.py',233),
  ('program -> PROGRAM ID SEMICOLON aux_funcion pn_go_main main pn_program_end','program',7,'p_program','main.py',234),
  ('program -> PROGRAM ID SEMICOLON pn_go_main main pn_program_end','program',6,'p_program','main.py',235),
  ('main -> MAIN pn_current_function LPAREN RPAREN vars bloque','main',6,'p_main','main.py',244),
  ('main -> MAIN pn_current_function LPAREN RPAREN bloque','main',5,'p_main','main.py',245),
  ('aux_funcion -> funcion','aux_funcion',1,'p_aux_funcion','main.py',249),
  ('aux_funcion -> funcion aux_funcion','aux_funcion',2,'p_aux_funcion','main.py',250),
  ('funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros pn_param_count RPAREN vars pn_func_var_count bloque pn_end_function','funcion',12,'p_funcion','main.py',254),
  ('funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros pn_param_count RPAREN bloque pn_end_function','funcion',10,'p_funcion','main.py',255),
  ('funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars pn_func_var_count bloque pn_end_function','funcion',10,'p_funcion','main.py',256),
  ('funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque pn_end_function','funcion',8,'p_funcion','main.py',257),
  ('vars -> VAR var','vars',2,'p_vars','main.py',262),
  ('var -> tipo COLON lista_ids SEMICOLON','var',4,'p_var','main.py',266),
  ('var -> tipo COLON lista_ids SEMICOLON var','var',5,'p_var','main.py',267),
  ('tipo_retorno -> tipo','tipo_retorno',1,'p_tipo_retorno','main.py',271),
  ('tipo_retorno -> VOID pn_current_type','tipo_retorno',2,'p_tipo_retorno','main.py',272),
  ('tipo -> INT pn_current_type','tipo',2,'p_tipo','main.py',276),
  ('tipo -> FLOAT pn_current_type','tipo',2,'p_tipo','main.py',277),
  ('tipo -> CHAR pn_current_type','tipo',2,'p_tipo','main.py',278),
  ('parametros -> tipo ID pn_add_parameter','parametros',3,'p_parametros','main.py',283),
  ('parametros -> tipo ID pn_add_parameter COMMA parametros','parametros',5,'p_parametros','main.py',284),
  ('lista_ids -> aux_lista_rec','lista_ids',1,'p_lista_ids','main.py',289),
  ('aux_lista_rec -> aux_lista','aux_lista_rec',1,'p_aux_lista_rec','main.py',293),
  ('aux_lista_rec -> aux_lista COMMA aux_lista_rec','aux_lista_rec',3,'p_aux_lista_rec','main.py',294),
  ('aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE','aux_lista',8,'p_aux_lista','main.py',298),
  ('aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE','aux_lista',5,'p_aux_lista','main.py',299),
  ('aux_lista -> ID pn_add_symbol','aux_lista',2,'p_aux_lista','main.py',300),
  ('escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON','escritura',5,'p_escritura','main.py',304),
  ('aux_escritura -> pn_push_write_operator letrero pn_write','aux_escritura',3,'p_aux_escritura','main.py',309),
  ('aux_escritura -> pn_push_write_operator expresion pn_write','aux_escritura',3,'p_aux_escritura','main.py',310),
  ('aux_escritura -> pn_push_write_operator letrero pn_write COMMA aux_escritura','aux_escritura',5,'p_aux_escritura','main.py',311),
  ('aux_escritura -> pn_push_write_operator expresion pn_write COMMA aux_escritura','aux_escritura',5,'p_aux_escritura','main.py',312),
  ('condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3','condicional',9,'p_condicional','main.py',317),
  ('bloque -> LBRACKET estatutos RBRACKET','bloque',3,'p_bloque','main.py',322),
  ('bloque -> LBRACKET RBRACKET','bloque',2,'p_bloque','main.py',323),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_estatutos','main.py',328),
  ('estatutos -> estatuto','estatutos',1,'p_estatutos','main.py',329),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','main.py',334),
  ('estatuto -> condicional','estatuto',1,'p_estatuto','main.py',335),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','main.py',336),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','main.py',337),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','main.py',338),
  ('estatuto -> decision','estatuto',1,'p_estatuto','main.py',339),
  ('estatuto -> no_condicional','estatuto',1,'p_estatuto','main.py',340),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','main.py',341),
  ('asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON','asignacion',7,'p_asignacion','main.py',346),
  ('retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON','retorno',7,'p_retorno','main.py',351),
  ('lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON','lectura',5,'p_lectura','main.py',356),
  ('aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read','aux_lectura',4,'p_aux_lectura','main.py',363),
  ('aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones','aux_lectura',5,'p_aux_lectura','main.py',364),
  ('aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura','aux_lectura',6,'p_aux_lectura','main.py',365),
  ('aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura','aux_lectura',7,'p_aux_lectura','main.py',366),
  ('letrero -> QUOTATION aux_letrero QUOTATION','letrero',3,'p_letrero','main.py',369),
  ('letrero -> QUOTATION QUOTATION','letrero',2,'p_letrero','main.py',370),
  ('aux_letrero -> CTE_CHAR','aux_letrero',1,'p_aux_letrero','main.py',374),
  ('aux_letrero -> CTE_CHAR aux_letrero','aux_letrero',2,'p_aux_letrero','main.py',375),
  ('decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2','decision',8,'p_decision','main.py',379),
  ('decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2','decision',11,'p_decision','main.py',380),
  ('llamada -> ID pn_verify_func LPAREN pn_func_era aux_llamada pn_arg_count RPAREN pn_func_gosub','llamada',8,'p_llamada','main.py',383),
  ('aux_llamada -> expresion pn_verify_argument','aux_llamada',2,'p_aux_llamada','main.py',387),
  ('aux_llamada -> expresion pn_verify_argument COMMA aux_llamada','aux_llamada',4,'p_aux_llamada','main.py',388),
  ('no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back','no_condicional',16,'p_no_condicional','main.py',393),
  ('no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back','no_condicional',15,'p_no_condicional','main.py',394),
  ('dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE','dimensiones',6,'p_dimensiones','main.py',398),
  ('dimensiones -> LSQUARE expresion COMMA expresion RSQUARE','dimensiones',5,'p_dimensiones','main.py',399),
  ('dimensiones -> LSQUARE expresion RSQUARE','dimensiones',3,'p_dimensiones','main.py',400),
  ('expresion -> comparacion aux_expresion','expresion',2,'p_expresion','main.py',404),
  ('expresion -> aux_comparacion','expresion',1,'p_expresion','main.py',405),
  ('aux_expresion -> AND pn_push_operator comparacion pn_and','aux_expresion',4,'p_aux_expresion','main.py',409),
  ('aux_expresion -> OR pn_push_operator comparacion pn_or','aux_expresion',4,'p_aux_expresion','main.py',410),
  ('aux_expresion -> AND pn_push_operator comparacion pn_and aux_expresion','aux_expresion',5,'p_aux_expresion','main.py',411),
  ('aux_expresion -> OR pn_push_operator comparacion pn_or aux_expresion','aux_expresion',5,'p_aux_expresion','main.py',412),
  ('comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison','comparacion',5,'p_comparacion','main.py',416),
  ('comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison','comparacion',5,'p_comparacion','main.py',417),
  ('comparacion -> exp EQUAL pn_push_operator exp pn_comparison','comparacion',5,'p_comparacion','main.py',418),
  ('aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison','aux_comparacion',5,'p_aux_comparacion','main.py',423),
  ('aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison','aux_comparacion',5,'p_aux_comparacion','main.py',424),
  ('aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison','aux_comparacion',5,'p_aux_comparacion','main.py',425),
  ('aux_comparacion -> exp','aux_comparacion',1,'p_aux_comparacion','main.py',426),
  ('exp -> termino pn_addition_substraction','exp',2,'p_exp','main.py',430),
  ('exp -> termino pn_addition_substraction PLUS pn_push_operator exp','exp',5,'p_exp','main.py',431),
  ('exp -> termino pn_addition_substraction MINUS pn_push_operator exp','exp',5,'p_exp','main.py',432),
  ('termino -> factor pn_multiplication_division','termino',2,'p_termino','main.py',437),
  ('termino -> factor pn_multiplication_division MULT pn_push_operator termino','termino',5,'p_termino','main.py',438),
  ('termino -> factor pn_multiplication_division DIV pn_push_operator termino','termino',5,'p_termino','main.py',439),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','main.py',443),
  ('factor -> PLUS var_cte','factor',2,'p_factor','main.py',444),
  ('factor -> PLUS llamada','factor',2,'p_factor','main.py',445),
  ('factor -> MINUS var_cte','factor',2,'p_factor','main.py',446),
  ('factor -> MINUS llamada','factor',2,'p_factor','main.py',447),
  ('factor -> var_cte','factor',1,'p_factor','main.py',448),
  ('factor -> llamada','factor',1,'p_factor','main.py',449),
  ('var_cte -> ID pn_push_operand_and_type','var_cte',2,'p_var_cte','main.py',453),
  ('var_cte -> CTE_INT pn_push_constant_and_type','var_cte',2,'p_var_cte','main.py',454),
  ('var_cte -> CTE_FLOAT pn_push_constant_and_type','var_cte',2,'p_var_cte','main.py',455),
  ('var_cte -> CTE_CHAR pn_push_constant_and_type','var_cte',2,'p_var_cte','main.py',456),
  ('pn_current_function -> <empty>','pn_current_function',0,'p_pn_current_function','main.py',533),
  ('pn_current_type -> <empty>','pn_current_type',0,'p_pn_current_type','main.py',542),
  ('pn_go_main -> <empty>','pn_go_main',0,'p_pn_go_main','main.py',547),
  ('pn_program_end -> <empty>','pn_program_end',0,'p_pn_program_end','main.py',552),
  ('pn_add_symbol -> <empty>','pn_add_symbol',0,'p_pn_add_symbol','main.py',559),
  ('pn_push_constant_and_type -> <empty>','pn_push_constant_and_type',0,'p_pn_push_constant_and_type','main.py',607),
  ('pn_push_operand_and_type -> <empty>','pn_push_operand_and_type',0,'p_pn_push_operand_and_type','main.py',628),
  ('pn_push_operator -> <empty>','pn_push_operator',0,'p_pn_push_operator','main.py',661),
  ('pn_addition_substraction -> <empty>','pn_addition_substraction',0,'p_pn_addition_substraction','main.py',671),
  ('pn_multiplication_division -> <empty>','pn_multiplication_division',0,'p_pn_multiplication_division','main.py',700),
  ('pn_assign -> <empty>','pn_assign',0,'p_pn_assign','main.py',731),
  ('pn_push_read_operator -> <empty>','pn_push_read_operator',0,'p_pn_push_read_operator','main.py',761),
  ('pn_read -> <empty>','pn_read',0,'p_pn_read','main.py',765),
  ('pn_push_write_operator -> <empty>','pn_push_write_operator',0,'p_pn_push_write_operator','main.py',779),
  ('pn_write -> <empty>','pn_write',0,'p_pn_write','main.py',783),
  ('pn_and -> <empty>','pn_and',0,'p_pn_and','main.py',797),
  ('pn_or -> <empty>','pn_or',0,'p_pn_or','main.py',832),
  ('pn_comparison -> <empty>','pn_comparison',0,'p_pn_comparison','main.py',863),
  ('pn_if_1 -> <empty>','pn_if_1',0,'p_pn_if_1','main.py',892),
  ('pn_if_2 -> <empty>','pn_if_2',0,'p_pn_if_2','main.py',910),
  ('pn_else -> <empty>','pn_else',0,'p_pn_else','main.py',916),
  ('pn_while_1 -> <empty>','pn_while_1',0,'p_pn_while_1','main.py',926),
  ('pn_while_2 -> <empty>','pn_while_2',0,'p_pn_while_2','main.py',931),
  ('pn_while_3 -> <empty>','pn_while_3',0,'p_pn_while_3','main.py',946),
  ('pn_for_push_comparison -> <empty>','pn_for_push_comparison',0,'p_pn_for_push_comparison','main.py',959),
  ('pn_for_go_false -> <empty>','pn_for_go_false',0,'p_pn_for_go_false','main.py',968),
  ('pn_for_go_back -> <empty>','pn_for_go_back',0,'p_pn_for_go_back','main.py',987),
  ('pn_add_function -> <empty>','pn_add_function',0,'p_pn_add_function','main.py',1005),
  ('pn_add_parameter -> <empty>','pn_add_parameter',0,'p_pn_add_parameter','main.py',1050),
  ('pn_param_count -> <empty>','pn_param_count',0,'p_pn_param_count','main.py',1068),
  ('pn_arg_count -> <empty>','pn_arg_count',0,'p_pn_arg_count','main.py',1073),
  ('pn_func_var_count -> <empty>','pn_func_var_count',0,'p_pn_func_var_count','main.py',1082),
  ('pn_end_function -> <empty>','pn_end_function',0,'p_pn_end_function','main.py',1087),
  ('pn_verify_func -> <empty>','pn_verify_func',0,'p_pn_verify_func','main.py',1096),
  ('pn_func_era -> <empty>','pn_func_era',0,'p_pn_func_era','main.py',1111),
  ('pn_verify_argument -> <empty>','pn_verify_argument',0,'p_pn_verify_argument','main.py',1120),
  ('pn_func_gosub -> <empty>','pn_func_gosub',0,'p_pn_func_gosub','main.py',1142),
  ('pn_retorno -> <empty>','pn_retorno',0,'p_pn_retorno','main.py',1160),
]
